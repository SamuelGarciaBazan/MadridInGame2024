-4 tipos de necesidades
	-ocio			-> morado
	-seguridad		-> azul
	-salud			-> rojo
	-zonas verdes	-> verde




-conectividad en el grafo
-relaci칩n entre los tipos


-huecos limitados
-niveles de problem치tica (1 por tipo)
-se pueden quitar figuras del juego,sin coste



-eventos aleatorios
-anticipaci칩n de eventos

-eleccion de dados aleatorios (pool de datos)



-turnos
-X turnos por nivel, se puede seguir jugando (opcional)
- 3 acciones por turno
	-robar quita 1 punto
	-poner quita 1 punto
	-puedes terminar sin gastarlas todas
- m치ximo de 3 figuras en mano
- no se pueden descartar figuras


GameManager
	-NodosManager (lista de nodos)
	-RandomDropper -> devuelve figuras
	-RandomEvents -> devuelve evento aleatorio 
	-FixedEvents -> gestiona eventos conocidos
	-UI_Manager

	-PickAndDropManager

	-control de juego (next turn, gastar acciones)



NodosManager
	-lista de nodos
	-Conectividad de nodos (lista de dependencias, grafo...)



Nodo
	-resultatos finales [4]
	-modificadores [4] 
	


